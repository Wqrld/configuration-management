 - name: Playbook to install tools for deployment
   become: true
   hosts: all
   roles:
    - geerlingguy.docker

   vars_prompt:
    - name: fqdn
      prompt: What is the fully qualified domain name (FQDN)?
      private: no
      default: 'test.vonderassen.com'

   tasks:
     - name: Print FQDN
       ansible.builtin.debug:
        msg: 'Deploying DDoSGrid stack for {{ fqdn }}'

     # Dependencies for provisioning
     - name: Install git, pip, python-docker
       apt:
         name: git,  python3-pip, python-docker
         state: present
     - name: Pip install python docker-compose
       pip:
         name: docker-compose
         executable: pip3

     # Checking out sources
     - name: Checkout "DDoSDB" from GitHub
       git:
         repo: 'https://github.com/ddosgrid/ddosdb.git'
         force: yes
         dest: /srv/ddosdb
     - name: Checkout "DDoSGrid" from GitHub
       git:
         repo: 'https://github.com/ddosgrid/ddosgrid-v2.git'
         force: yes
         dest: /srv/ddosgrid-v2
     - name: Checkout "ddos_dissector" from GitHub into DDoSGrid
       git:
         repo: 'https://github.com/ddosgrid/ddos_dissector'
         dest: /srv/ddosgrid-v2/ddos_dissector
     - name: Checkout "converters" from GitHub into DDoSGrid
       git:
         repo: 'https://github.com/ddosgrid/converters'
         dest: /srv/ddosgrid-v2/converters
     - name: Checkout "HTTPS reverse proxy" from GitHub into DDoSGrid
       git:
         repo: 'https://github.com/ddosgrid/https-reverse-proxy.git'
         force: yes
         dest: /srv/proxy

     # Setup SSL
     - name: Replace SSL certificate
       copy:
         src: ./assets/certificate.cert
         dest: /srv/proxy/cert/certificate.cer
     - name: Replace SSL certificate key
       copy:
         src: ./assets/certificate.key
         dest: /srv/proxy/cert/certificate.key

     # Configure domain name
     - name: Render FQDN into compose file
       ansible.builtin.template:
         src: ./templates/docker-compose-ddosgrid.yml
         dest: /srv/ddosgrid-v2/docker-compose.yml
     - name: Render FQDN into frontend env file
       ansible.builtin.template:
         src: ./templates/frontend-env-production
         dest: /srv/ddosgrid-v2/frontend/.env.production

     # Start services
     - name: Start proxy service
       community.general.docker_compose:
         project_src: /srv/proxy
     - name: Start ddosgrid service
       community.general.docker_compose:
         project_src: /srv/ddosgrid-v2
     - name: Start ddosdb service
       community.general.docker_compose:
         project_src: /srv/ddosdb

     # Housekeeping
     - name: Create ElasticSearch index
       shell: |
         docker exec ddosdb_housekeeping_1 sh -l -c "sleep 30; /app/ddosdb-docker.db"

     - name: Create PW using OpenSSL
       shell: openssl rand -hex 12
       register: pw

     - name: Create super user in DDoSDB
       shell: |
         docker exec ddosdb sh -l -c "DJANGO_SUPERUSER_PASSWORD={{ pw.stdout }} python manage.py createsuperuser --noinput --username test --email test@test.com"
       register: createsuperuser
       ignore_errors: yes


     - name: Print default user
       ansible.builtin.debug:
         msg: 'IMPORTANT: User "test" was created with password "{{ pw.stdout }}". We recommend to change it on https://{{ fqdn }}/ddosgrid/ddosdb/admin'

     - name: Print next steps
       ansible.builtin.debug:
         msg: 'IMPORTANT: Additionally, in the DDoSDB admin panel you need to register the DDoSGrid app and add the secrets to /srv/ddosgrid/docker-compose.yml in the VM'
